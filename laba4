program project1;

{$mode objfpc}{$H+}

uses
  {$IFDEF UNIX}{$IFDEF UseCThreads}
  cthreads,
  {$ENDIF}{$ENDIF}
  Classes
  { you can add units after this };
   type Vector=array[word] of char; 
   var  A:vector; n:integer; 
     t:char;
   Procedure Create(var arr:vector); 
   var i:integer;
   begin
      for i:=0 to n-1 do
      begin
        write('Vvedite  simvol: ');
        readln(arr[i]);
      end;
   end;
 Procedure Sort(arr:Vector);
 var j,i:integer; key:char;
 begin
    for j:=1 to n-1 do   
    begin
    key:=A[j]; 
    i:=j-1; 
    while ((i>=0) and (A[i]<key)) do 
    begin
    A[i+1]:=A[i];  
    Dec(i)   

    end;
   A[i+1]:=key;   
   end
 end;

Procedure Print(Arr:Vector);
var i:integer;
begin
   for i:=0 to n-1 do  
   write (arr[i],' ');
   writeln;
   end;
   Function BinarySearch(arr:Vector; key:char):integer;
var right,left,middle:integer;
begin
left:=0;
right:=n-1;
while
left<=right do
begin
middle:=left+(right-left) div 2;
if key>Arr[middle] then
right:=middle-1
else
if key<Arr[middle]
then
left:=middle+1
else
begin
BinarySearch:=middle;
exit
end;
end;
 BinarySearch:=-1;
end;
begin
readln(n);
Create(A);
Print(A);
Sort(A);
print(A);
write('vvedite simvol dlya poiska: ');
readln(t);
if BinarySearch(A, t)=-1 then
 writeln('ne naideno')
 else
writeln('index: ',BinarySearch(A, t));

readln;                                      
end.
